{"version":3,"sources":["constants.js","components/pages/sections/AdminCardSection1.js","components/pages/sections/TableSection.js","components/pages/sections/ChartSection1.js","components/pages/sections/ChartSection2.js","components/pages/DashboardPage.js","components/Footer.js","components/AlertBox.js","App.js","registerServiceWorker.js","index.js"],"names":["divisions","Dhaka","Rangpur","Chittagong","Barishal","Khulna","Sylhet","Mymensingh","Rajshahi","AdminCardSection1","this","props","divisionalCount","map","item","react_default","a","createElement","mdbreact_esm","key","name","className","style","styles","cardStyle","divStyle","prev_count","count","countText","display","justifyContent","alignItems","fontSize","paddingLeft","color","fontWeight","concat","renderedCardList","renderDivisionCards","xl","md","slice","Component","textAlign","padding","background","margin","centerText","TableSection","cityArr","data","districtData","length","infectedCityList","filter","findIndex","i","zeroCountList","forEach","cityName","obj","push","Object","toConsumableArray","division","cityList","getDivisionalData","index","id","marginLeft","hover","renderTableRows","ChartSection1","_this","classCallCheck","_super","call","label","state","myList","arrObjectKeys","keys","labels","tempLabels","chartData","tempData","datasets","backgroundColor","dataBar","getChartData","es","height","options","responsive","maintainAspectRatio","scales","xAxes","barPercentage","gridLines","yAxes","ticks","beginAtZero","ChartSection2","divisionInfo","dataDoughnut","hoverBackgroundColor","lg","renderDivisionRows","DashboardPage","totalInfected","totalDeath","totalRecovered","lastUpdate","fetchData","fetchCount","axios","get","response","getDivisionalCount","setState","updated_on","console","log","_context","t0","deaths","value","confirmed","recovered","_context2","divisionList","divisionLabels","list","sort","b","Fragment","AdminCardSection1_AdminCardSection1","sections_ChartSection1","TableSection_TableSection","sections_ChartSection2","Footer","outline","rel","tag","href","target","flexDirection","marginRight","fab","icon","container","zIndex","bottom","left","right","position","boxShadow","AlertBox","show","children","App","hideAlert","showAlertBox","timer","setTimeout","clearTimeout","DashboardPage_DashboardPage","components_AlertBox","components_Footer","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.1e94c019.chunk.js","sourcesContent":["export const divisions = {\r\n\tDhaka: [\r\n\t\t'Dhaka City',\r\n\t\t'Dhaka (District)',\r\n\t\t'Faridpur',\r\n\t\t'Gazipur',\r\n\t\t'Gopalganj',\r\n\t\t'Kishoreganj',\r\n\t\t'Madaripur',\r\n\t\t'Manikganj',\r\n\t\t'Munshigonj',\r\n\t\t'Narayanganj',\r\n\t\t'Narshingdi',\r\n\t\t'Rajbari',\r\n\t\t'Shariatpur',\r\n\t\t'Tangail',\r\n\t],\r\n\tRangpur: [\r\n\t\t'Dinajpur',\r\n\t\t'Gaibandha',\r\n\t\t'Kurigram',\r\n\t\t'Lalmonirhat',\r\n\t\t'Nilphamari',\r\n\t\t'Panchagar',\r\n\t\t'Rangpur',\r\n\t\t'Thakurgaon',\r\n\t],\r\n\tChittagong: [\r\n\t\t'Chattogram',\r\n\t\t'Cox’s bazar',\r\n\t\t'Cumilla',\r\n\t\t'B. Baria',\r\n\t\t'Laksmipur',\r\n\t\t'Chandpur',\r\n\t\t'Bandarban',\r\n\t\t'Feni',\r\n\t\t'Khagrachhari',\r\n\t\t'Noakhali',\r\n\t\t'Rangamati',\r\n\t],\r\n\tBarishal: [\r\n\t\t'Barguna',\r\n\t\t'Barishal',\r\n\t\t'Bhola',\r\n\t\t'Jhalokathi',\r\n\t\t'Potuakhali',\r\n\t\t'Pirojpur',\r\n\t],\r\n\tKhulna: [\r\n\t\t'Bagerhat',\r\n\t\t'Chuadanga',\r\n\t\t'Jessore',\r\n\t\t'Jhenaidah',\r\n\t\t'Khulna',\r\n\t\t'Kushtia',\r\n\t\t'Magura',\r\n\t\t'Meherpur',\r\n\t\t'Narail',\r\n\t\t'Satkhira',\r\n\t],\r\n\tSylhet: ['Hobiganj', 'Moulovi Bazar', 'Sunamganj', 'Sylhet'],\r\n\tMymensingh: ['Jamalpur', 'Mymensingh', 'Netrokona', 'Sherpur'],\r\n\tRajshahi: [\r\n\t\t'Bogra',\r\n\t\t'Joypurhat',\r\n\t\t'Naogaon',\r\n\t\t'Natore',\r\n\t\t'Chapainawabganj',\r\n\t\t'Pabna',\r\n\t\t'Rajshahi',\r\n\t\t'Sirajganj',\r\n\t],\r\n};\r\n","import React, { Component } from 'react';\r\nimport { MDBCard, MDBRow, MDBCol } from 'mdbreact';\r\nimport { divisions } from '../../../constants';\r\n\r\nexport default class AdminCardSection1 extends Component {\r\n\trenderDivisionCards() {\r\n\t\treturn this.props.divisionalCount.map((item) => (\r\n\t\t\t<MDBCard key={item.name} className='cascading-admin-card'>\r\n\t\t\t\t<div className='admin-up'>\r\n\t\t\t\t\t<h2 style={styles.cardStyle}>{item.name}</h2>\r\n\t\t\t\t\t<div style={styles.divStyle}>\r\n\t\t\t\t\t\t{item.prev_count === item.count ? (\r\n\t\t\t\t\t\t\t<div style={styles.countText}>{item.count}</div>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\t\t\t\t\talignItems: 'center',\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<div style={styles.countText}>{item.count}</div>\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tfontSize: '1.1em',\r\n\t\t\t\t\t\t\t\t\t\tpaddingLeft: '5px',\r\n\t\t\t\t\t\t\t\t\t\tcolor: 'gray',\r\n\t\t\t\t\t\t\t\t\t\tfontWeight: 300,\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{`(${item.count - item.prev_count > 0 &&\r\n\t\t\t\t\t\t\t\t\t\t'+'}${item.count - item.prev_count})`}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<br></br>\r\n\t\t\t</MDBCard>\r\n\t\t));\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst renderedCardList = this.renderDivisionCards();\r\n\t\treturn (\r\n\t\t\t<MDBRow className='mb-4'>\r\n\t\t\t\t<MDBCol xl='3' md='10' className='mb-r'>\r\n\t\t\t\t\t{renderedCardList.slice(0, 2)}\r\n\t\t\t\t</MDBCol>\r\n\r\n\t\t\t\t<MDBCol xl='3' md='6' className='mb-r'>\r\n\t\t\t\t\t{renderedCardList.slice(2, 4)}\r\n\t\t\t\t</MDBCol>\r\n\t\t\t\t<MDBCol xl='3' md='6' className='mb-r'>\r\n\t\t\t\t\t{renderedCardList.slice(4, 6)}\r\n\t\t\t\t</MDBCol>\r\n\t\t\t\t<MDBCol xl='3' md='6' className='mb-r'>\r\n\t\t\t\t\t{renderedCardList.slice(6)}\r\n\t\t\t\t</MDBCol>\r\n\t\t\t</MDBRow>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst styles = {\r\n\tdivStyle: {\r\n\t\ttextAlign: 'center',\r\n\t\tpadding: '5%',\r\n\t},\r\n\tcardStyle: {\r\n\t\tbackground: '#98C9C5',\r\n\t\tcolor: '#fff',\r\n\t\tmargin: '0px',\r\n\t\tpadding: '3%',\r\n\t\ttextAlign: 'center',\r\n\t},\r\n\tcountText: {\r\n\t\tfontSize: '1.6em',\r\n\t\tfontWeight: 300,\r\n\t},\r\n};\r\n","import React, { Component } from 'react';\r\nimport {\r\n\tMDBCard,\r\n\tMDBCardBody,\r\n\tMDBTable,\r\n\tMDBTableBody,\r\n\tMDBTableHead,\r\n\tMDBRow,\r\n\tMDBCol,\r\n} from 'mdbreact';\r\nimport axios from 'axios';\r\nimport { divisions } from '../../../constants';\r\nconst centerText = {\r\n\ttextAlign: 'center',\r\n};\r\n\r\nexport default class TableSection extends Component {\r\n\tgetDivisionalData(cityArr) {\r\n\t\t// cityArr -> cities contained in a division\r\n\t\t// find the data related to the cities in the given cityArr\r\n\t\t// returns list in format [{name: 'Dhaka', count: 20}...]\r\n\t\tconst data = this.props.districtData;\r\n\t\tif (data.length === 0) return [];\r\n\r\n\t\tconst infectedCityList = data.filter(\r\n\t\t\t(item) => cityArr.findIndex((i) => i === item.name) !== -1\r\n\t\t);\r\n\r\n\t\t// add the remaining cities with a 0 count, for padding purpose\r\n\t\tconst zeroCountList = [];\r\n\t\tcityArr.forEach((cityName) => {\r\n\t\t\tif (infectedCityList.findIndex((i) => i.name === cityName) === -1) {\r\n\t\t\t\tconst obj = {};\r\n\t\t\t\tobj['name'] = cityName;\r\n\t\t\t\tobj['count'] = 0;\r\n\t\t\t\tobj['prev_count'] = 0;\r\n\t\t\t\tobj['id'] = cityName;\r\n\t\t\t\tzeroCountList.push(obj);\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn [...infectedCityList, ...zeroCountList];\r\n\t}\r\n\r\n\trenderTableRows(division) {\r\n\t\t// division -> cities to render\r\n\t\t// renders the rows with the cities inside the division\r\n\t\tconst cityList = this.getDivisionalData(division);\r\n\t\tif (cityList.length === 0) return null;\r\n\r\n\t\treturn cityList.map((item, index) => (\r\n\t\t\t<tr key={item.id}>\r\n\t\t\t\t<td>{index + 1}</td>\r\n\t\t\t\t<td>{item.name}</td>\r\n\t\t\t\t{item.count === item.prev_count ? (\r\n\t\t\t\t\t<td>{item.count}</td>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t{item.count}{' '}\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tfontSize: '0.9em',\r\n\t\t\t\t\t\t\t\tdisplay: 'inline-block',\r\n\t\t\t\t\t\t\t\tmarginLeft: '6px',\r\n\t\t\t\t\t\t\t\tfontWeight: 500,\r\n\t\t\t\t\t\t\t\tcolor: 'gray',\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t({item.count - item.prev_count > 0 && '+'}\r\n\t\t\t\t\t\t\t{item.count - item.prev_count})\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t)}\r\n\t\t\t</tr>\r\n\t\t));\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<MDBRow className='mb-4'>\r\n\t\t\t\t\t<MDBCol md='4'>\r\n\t\t\t\t\t\t<MDBCard>\r\n\t\t\t\t\t\t\t<MDBCardBody>\r\n\t\t\t\t\t\t\t\t<h4 style={centerText}>Dhaka Division</h4>\r\n\t\t\t\t\t\t\t\t<MDBTable hover>\r\n\t\t\t\t\t\t\t\t\t<MDBTableHead color='blue-grey lighten-4'>\r\n\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t<th>#</th>\r\n\t\t\t\t\t\t\t\t\t\t\t<th>District Name</th>\r\n\t\t\t\t\t\t\t\t\t\t\t<th>Covid-19 Positive</th>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t</MDBTableHead>\r\n\t\t\t\t\t\t\t\t\t<MDBTableBody>\r\n\t\t\t\t\t\t\t\t\t\t{this.renderTableRows(divisions.Dhaka)}\r\n\t\t\t\t\t\t\t\t\t</MDBTableBody>\r\n\t\t\t\t\t\t\t\t</MDBTable>\r\n\t\t\t\t\t\t\t</MDBCardBody>\r\n\t\t\t\t\t\t</MDBCard>\r\n\t\t\t\t\t</MDBCol>\r\n\t\t\t\t\t<MDBCol md='4' className='mb-4'>\r\n\t\t\t\t\t\t<MDBCard>\r\n\t\t\t\t\t\t\t<MDBCardBody>\r\n\t\t\t\t\t\t\t\t<h4 style={centerText}>Chittagong Division</h4>\r\n\t\t\t\t\t\t\t\t<MDBTable hover>\r\n\t\t\t\t\t\t\t\t\t<MDBTableHead color='blue lighten-5'>\r\n\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t<th>#</th>\r\n\t\t\t\t\t\t\t\t\t\t\t<th>District Name</th>\r\n\t\t\t\t\t\t\t\t\t\t\t<th>Covid-19 Positive</th>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t</MDBTableHead>\r\n\t\t\t\t\t\t\t\t\t<MDBTableBody>\r\n\t\t\t\t\t\t\t\t\t\t{this.renderTableRows(\r\n\t\t\t\t\t\t\t\t\t\t\tdivisions.Chittagong\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</MDBTableBody>\r\n\t\t\t\t\t\t\t\t</MDBTable>\r\n\t\t\t\t\t\t\t</MDBCardBody>\r\n\t\t\t\t\t\t</MDBCard>\r\n\t\t\t\t\t</MDBCol>\r\n\t\t\t\t\t<MDBCol md='4' className='mb-4'>\r\n\t\t\t\t\t\t<MDBCard>\r\n\t\t\t\t\t\t\t<MDBCardBody>\r\n\t\t\t\t\t\t\t\t<h4 style={centerText}>Khulna Division</h4>\r\n\t\t\t\t\t\t\t\t<MDBTable hover>\r\n\t\t\t\t\t\t\t\t\t<MDBTableHead color='blue lighten-5'>\r\n\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t<th>#</th>\r\n\t\t\t\t\t\t\t\t\t\t\t<th>District Name</th>\r\n\t\t\t\t\t\t\t\t\t\t\t<th>Covid-19 Positive</th>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t</MDBTableHead>\r\n\t\t\t\t\t\t\t\t\t<MDBTableBody>\r\n\t\t\t\t\t\t\t\t\t\t{this.renderTableRows(divisions.Khulna)}\r\n\t\t\t\t\t\t\t\t\t</MDBTableBody>\r\n\t\t\t\t\t\t\t\t</MDBTable>\r\n\t\t\t\t\t\t\t</MDBCardBody>\r\n\t\t\t\t\t\t</MDBCard>\r\n\t\t\t\t\t</MDBCol>\r\n\t\t\t\t</MDBRow>\r\n\r\n\t\t\t\t<MDBRow className='mb-4'>\r\n\t\t\t\t\t<MDBCol md='6'>\r\n\t\t\t\t\t\t<MDBCard>\r\n\t\t\t\t\t\t\t<MDBCardBody>\r\n\t\t\t\t\t\t\t\t<h4 style={centerText}>Rajshahi Division</h4>\r\n\t\t\t\t\t\t\t\t<MDBTable hover>\r\n\t\t\t\t\t\t\t\t\t<MDBTableHead color='blue-grey lighten-4'>\r\n\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t<th>#</th>\r\n\t\t\t\t\t\t\t\t\t\t\t<th>District Name</th>\r\n\t\t\t\t\t\t\t\t\t\t\t<th>Covid-19 Positive</th>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t</MDBTableHead>\r\n\t\t\t\t\t\t\t\t\t<MDBTableBody>\r\n\t\t\t\t\t\t\t\t\t\t{this.renderTableRows(\r\n\t\t\t\t\t\t\t\t\t\t\tdivisions.Rajshahi\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</MDBTableBody>\r\n\t\t\t\t\t\t\t\t</MDBTable>\r\n\t\t\t\t\t\t\t</MDBCardBody>\r\n\t\t\t\t\t\t</MDBCard>\r\n\t\t\t\t\t</MDBCol>\r\n\t\t\t\t\t<MDBCol md='6' className='mb-4'>\r\n\t\t\t\t\t\t<MDBCard>\r\n\t\t\t\t\t\t\t<MDBCardBody>\r\n\t\t\t\t\t\t\t\t<h4 style={centerText}>Rangpur Division</h4>\r\n\t\t\t\t\t\t\t\t<MDBTable hover>\r\n\t\t\t\t\t\t\t\t\t<MDBTableHead color='blue lighten-5'>\r\n\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t<th>#</th>\r\n\t\t\t\t\t\t\t\t\t\t\t<th>District Name</th>\r\n\t\t\t\t\t\t\t\t\t\t\t<th>Covid-19 Positive</th>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t</MDBTableHead>\r\n\t\t\t\t\t\t\t\t\t<MDBTableBody>\r\n\t\t\t\t\t\t\t\t\t\t{this.renderTableRows(\r\n\t\t\t\t\t\t\t\t\t\t\tdivisions.Rangpur\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</MDBTableBody>\r\n\t\t\t\t\t\t\t\t</MDBTable>\r\n\t\t\t\t\t\t\t</MDBCardBody>\r\n\t\t\t\t\t\t</MDBCard>\r\n\t\t\t\t\t</MDBCol>\r\n\t\t\t\t</MDBRow>\r\n\t\t\t\t<MDBRow className='mb-4'>\r\n\t\t\t\t\t<MDBCol md='4' className='mb-4'>\r\n\t\t\t\t\t\t<MDBCard>\r\n\t\t\t\t\t\t\t<MDBCardBody>\r\n\t\t\t\t\t\t\t\t<h4 style={centerText}>Barishal Division</h4>\r\n\t\t\t\t\t\t\t\t<MDBTable hover>\r\n\t\t\t\t\t\t\t\t\t<MDBTableHead color='blue lighten-5'>\r\n\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t<th>#</th>\r\n\t\t\t\t\t\t\t\t\t\t\t<th>District Name</th>\r\n\t\t\t\t\t\t\t\t\t\t\t<th>Covid-19 Positive</th>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t</MDBTableHead>\r\n\t\t\t\t\t\t\t\t\t<MDBTableBody>\r\n\t\t\t\t\t\t\t\t\t\t{this.renderTableRows(\r\n\t\t\t\t\t\t\t\t\t\t\tdivisions.Barishal\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</MDBTableBody>\r\n\t\t\t\t\t\t\t\t</MDBTable>\r\n\t\t\t\t\t\t\t</MDBCardBody>\r\n\t\t\t\t\t\t</MDBCard>\r\n\t\t\t\t\t</MDBCol>\r\n\t\t\t\t\t<MDBCol md='4'>\r\n\t\t\t\t\t\t<MDBCard>\r\n\t\t\t\t\t\t\t<MDBCardBody>\r\n\t\t\t\t\t\t\t\t<h4 style={centerText}>Sylhet Division</h4>\r\n\t\t\t\t\t\t\t\t<MDBTable hover>\r\n\t\t\t\t\t\t\t\t\t<MDBTableHead color='blue-grey lighten-4'>\r\n\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t<th>#</th>\r\n\t\t\t\t\t\t\t\t\t\t\t<th>District Name</th>\r\n\t\t\t\t\t\t\t\t\t\t\t<th>Covid-19 Positive</th>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t</MDBTableHead>\r\n\t\t\t\t\t\t\t\t\t<MDBTableBody>\r\n\t\t\t\t\t\t\t\t\t\t{this.renderTableRows(divisions.Sylhet)}\r\n\t\t\t\t\t\t\t\t\t</MDBTableBody>\r\n\t\t\t\t\t\t\t\t</MDBTable>\r\n\t\t\t\t\t\t\t</MDBCardBody>\r\n\t\t\t\t\t\t</MDBCard>\r\n\t\t\t\t\t</MDBCol>\r\n\t\t\t\t\t<MDBCol md='4' className='mb-4'>\r\n\t\t\t\t\t\t<MDBCard>\r\n\t\t\t\t\t\t\t<MDBCardBody>\r\n\t\t\t\t\t\t\t\t<h4 style={centerText}>Mymensingh Division</h4>\r\n\t\t\t\t\t\t\t\t<MDBTable hover>\r\n\t\t\t\t\t\t\t\t\t<MDBTableHead color='blue lighten-5'>\r\n\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t<th>#</th>\r\n\t\t\t\t\t\t\t\t\t\t\t<th>District Name</th>\r\n\t\t\t\t\t\t\t\t\t\t\t<th>Covid-19 Positive</th>\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t</MDBTableHead>\r\n\t\t\t\t\t\t\t\t\t<MDBTableBody>\r\n\t\t\t\t\t\t\t\t\t\t{this.renderTableRows(\r\n\t\t\t\t\t\t\t\t\t\t\tdivisions.Mymensingh\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</MDBTableBody>\r\n\t\t\t\t\t\t\t\t</MDBTable>\r\n\t\t\t\t\t\t\t</MDBCardBody>\r\n\t\t\t\t\t\t</MDBCard>\r\n\t\t\t\t\t</MDBCol>\r\n\t\t\t\t</MDBRow>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport { MDBCol, MDBCard, MDBCardBody, MDBRow } from 'mdbreact';\r\nimport axios from 'axios';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nclass ChartSection1 extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tlabel: {},\r\n\t\t};\r\n\t}\r\n\tlabel = {};\r\n\r\n\tgetChartData() {\r\n\t\tlet total = 0;\r\n\t\tconst myList = this.props.districtData;\r\n\t\tconst arrObjectKeys = Object.keys(myList);\r\n\t\tlet labels = [];\r\n\t\tlet tempLabels = arrObjectKeys.map(function(key, index) {\r\n\t\t\tconst item = myList[key];\r\n\t\t\treturn item.name;\r\n\t\t});\r\n\r\n\t\tif (tempLabels) labels = tempLabels;\r\n\t\t//console.log('getChartData labels', labels);\r\n\t\t// return total;\r\n\t\tlet chartData = [];\r\n\t\tlet tempData = arrObjectKeys.map(function(key, index) {\r\n\t\t\tconst item = myList[key];\r\n\t\t\treturn item.count;\r\n\t\t});\r\n\t\tif (tempData) chartData = tempData;\r\n\t\t//console.log('getChartData chartData', chartData);\r\n\t\tconst dataBar = {\r\n\t\t\tlabels: labels,\r\n\t\t\tdatasets: [\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: 'Infected',\r\n\t\t\t\t\tdata: chartData,\r\n\t\t\t\t\tbackgroundColor: 'rgba(245, 74, 85, 0.5)',\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t};\r\n\r\n\t\treturn dataBar;\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst dataBar = this.getChartData();\r\n\r\n\t\tconst barChartOptions = {\r\n\t\t\tresponsive: true,\r\n\t\t\tmaintainAspectRatio: false,\r\n\t\t\tscales: {\r\n\t\t\t\txAxes: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tbarPercentage: 1,\r\n\t\t\t\t\t\tgridLines: {\r\n\t\t\t\t\t\t\tdisplay: true,\r\n\t\t\t\t\t\t\tcolor: 'rgba(0, 0, 0, 0.01)',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t\tyAxes: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tgridLines: {\r\n\t\t\t\t\t\t\tdisplay: true,\r\n\t\t\t\t\t\t\tcolor: 'rgba(0, 0, 0, 0.1)',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tticks: {\r\n\t\t\t\t\t\t\tbeginAtZero: true,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t\t<MDBRow className='mb-4'>\r\n\t\t\t\t<MDBCol md='12' className='mb-4'>\r\n\t\t\t\t\t<MDBCard className='mb-4'>\r\n\t\t\t\t\t\t<MDBCardBody>\r\n\t\t\t\t\t\t\t<Bar\r\n\t\t\t\t\t\t\t\tdata={dataBar}\r\n\t\t\t\t\t\t\t\theight={350}\r\n\t\t\t\t\t\t\t\toptions={barChartOptions}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</MDBCardBody>\r\n\t\t\t\t\t</MDBCard>\r\n\t\t\t\t</MDBCol>\r\n\t\t\t</MDBRow>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ChartSection1;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { MDBCol, MDBCard, MDBCardBody, MDBCardHeader, MDBRow } from 'mdbreact';\r\nimport { MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport { divisions } from '../../../constants';\r\n\r\nclass ChartSection2 extends Component {\r\n\trenderDivisionRows() {\r\n\t\treturn this.props.divisionalCount.map((item, index) => (\r\n\t\t\t<tr key={item.name}>\r\n\t\t\t\t<td>{index + 1}</td>\r\n\t\t\t\t<td>{item.name}</td>\r\n\t\t\t\t{item.count === item.prev_count ? (\r\n\t\t\t\t\t<td>{item.count}</td>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t{item.count}{' '}\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tfontSize: '0.9em',\r\n\t\t\t\t\t\t\t\tdisplay: 'inline-block',\r\n\t\t\t\t\t\t\t\tmarginLeft: '6px',\r\n\t\t\t\t\t\t\t\tfontWeight: 500,\r\n\t\t\t\t\t\t\t\tcolor: 'gray',\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t({item.count - item.prev_count > 0 && '+'}\r\n\t\t\t\t\t\t\t{item.count - item.prev_count})\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t)}\r\n\t\t\t</tr>\r\n\t\t));\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst divisionInfo = this.props.divisionalCount;\r\n\r\n\t\tconst dataDoughnut = {\r\n\t\t\tlabels: divisionInfo.map((item) => item.name),\r\n\t\t\tdatasets: [\r\n\t\t\t\t{\r\n\t\t\t\t\t// API CALL\r\n\t\t\t\t\tdata: divisionInfo.map((item) => item.count),\r\n\t\t\t\t\tbackgroundColor: [\r\n\t\t\t\t\t\t'#F7464A',\r\n\t\t\t\t\t\t'#46BFBD',\r\n\t\t\t\t\t\t'#FDB45C',\r\n\t\t\t\t\t\t'#949FB1',\r\n\t\t\t\t\t\t'#4D5360',\r\n\t\t\t\t\t\t'#1121C1',\r\n\t\t\t\t\t\t'#7721C1',\r\n\t\t\t\t\t\t'#BB7A5E',\r\n\t\t\t\t\t],\r\n\t\t\t\t\thoverBackgroundColor: [\r\n\t\t\t\t\t\t'#FF5A5E',\r\n\t\t\t\t\t\t'#5AD3D1',\r\n\t\t\t\t\t\t'#FFC870',\r\n\t\t\t\t\t\t'#A8B3C5',\r\n\t\t\t\t\t\t'#616774',\r\n\t\t\t\t\t\t'#4421C1',\r\n\t\t\t\t\t\t'#9921C1',\r\n\t\t\t\t\t\t'#FFAA5E',\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t\t<MDBRow className='mb-4'>\r\n\t\t\t\t<MDBCol md='12' lg='4' className='mb-4'>\r\n\t\t\t\t\t<MDBCard className='mb-4'>\r\n\t\t\t\t\t\t<MDBCardHeader>Divisional Chart</MDBCardHeader>\r\n\t\t\t\t\t\t<MDBCardBody>\r\n\t\t\t\t\t\t\t<Doughnut\r\n\t\t\t\t\t\t\t\tdata={dataDoughnut}\r\n\t\t\t\t\t\t\t\theight={300}\r\n\t\t\t\t\t\t\t\toptions={{ responsive: true }}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t</MDBCardBody>\r\n\t\t\t\t\t</MDBCard>\r\n\t\t\t\t</MDBCol>\r\n\t\t\t\t<MDBCol md='12' lg='8' className='mb-4'>\r\n\t\t\t\t\t<MDBCard className='mb-4'>\r\n\t\t\t\t\t\t<MDBCardHeader>Division At a Glance</MDBCardHeader>\r\n\t\t\t\t\t\t<MDBTable hover>\r\n\t\t\t\t\t\t\t<MDBTableHead color='blue lighten-5'>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<th>#</th>\r\n\t\t\t\t\t\t\t\t\t<th>Division Name</th>\r\n\t\t\t\t\t\t\t\t\t<th>Covid-19 Positive</th>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</MDBTableHead>\r\n\t\t\t\t\t\t\t<MDBTableBody>\r\n\t\t\t\t\t\t\t\t{this.renderDivisionRows()}\r\n\t\t\t\t\t\t\t</MDBTableBody>\r\n\t\t\t\t\t\t</MDBTable>\r\n\t\t\t\t\t</MDBCard>\r\n\t\t\t\t</MDBCol>\r\n\t\t\t</MDBRow>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ChartSection2;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport AdminCardSection1 from './sections/AdminCardSection1';\r\nimport TableSection from './sections/TableSection';\r\nimport ChartSection1 from './sections/ChartSection1';\r\nimport ChartSection2 from './sections/ChartSection2';\r\nimport { divisions } from '../../constants';\r\n\r\nexport default class DashboardPage extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tdistrictData: [],\r\n\t\t\tdivisionalCount: [],\r\n\t\t\ttotalInfected: null,\r\n\t\t\ttotalDeath: null,\r\n\t\t\ttotalRecovered: null,\r\n\t\t\tlastUpdate: '',\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.fetchData();\r\n\t\tthis.fetchCount();\r\n\t}\r\n\r\n\tasync fetchData() {\r\n\t\ttry {\r\n\t\t\tconst response = await axios.get(\r\n\t\t\t\t'https://corona-bd.herokuapp.com/district'\r\n\t\t\t);\r\n\t\t\tconst divisionalCount = this.getDivisionalCount(\r\n\t\t\t\tdivisions,\r\n\t\t\t\tresponse.data.data\r\n\t\t\t);\r\n\t\t\tthis.setState({\r\n\t\t\t\tdistrictData: response.data.data,\r\n\t\t\t\tdivisionalCount,\r\n\t\t\t\tlastUpdate: response.data.updated_on,\r\n\t\t\t});\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tasync fetchCount() {\r\n\t\ttry {\r\n\t\t\tconst response = await axios.get(\r\n\t\t\t\t'https://covid19.mathdro.id/api/countries/BD'\r\n\t\t\t);\r\n\t\t\tconst { data } = response;\r\n\t\t\tthis.setState({\r\n\t\t\t\ttotalDeath: data.deaths.value,\r\n\t\t\t\ttotalInfected: data.confirmed.value,\r\n\t\t\t\ttotalRecovered: data.recovered.value,\r\n\t\t\t});\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tgetDivisionalCount(divisionList, data) {\r\n\t\t// get total counts for given division\r\n\t\t// if (data.length === 0 || Object.keys(divisionList).length === 0)\r\n\t\t// \treturn [];\r\n\r\n\t\tconst divisionLabels = Object.keys(divisionList);\r\n\t\tlet list = [];\r\n\r\n\t\tdivisionLabels.forEach((division) => {\r\n\t\t\t// const count = data.reduce((acc, item) => {\r\n\t\t\t// \tif (\r\n\t\t\t// \t\tdivisionList[division].findIndex((i) => i === item.name) !==\r\n\t\t\t// \t\t-1\r\n\t\t\t// \t) {\r\n\t\t\t// \t\treturn acc + item.count;\r\n\t\t\t// \t}\r\n\t\t\t// \treturn acc;\r\n\t\t\t// }, 0);\r\n\t\t\tlet count = 0;\r\n\t\t\tlet prev_count = 0;\r\n\r\n\t\t\tdata.forEach((item) => {\r\n\t\t\t\tif (\r\n\t\t\t\t\tdivisionList[division].findIndex((i) => i === item.name) !==\r\n\t\t\t\t\t-1\r\n\t\t\t\t) {\r\n\t\t\t\t\tcount += item.count;\r\n\t\t\t\t\tprev_count += item.prev_count;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tlist.push({ name: division, count, prev_count });\r\n\t\t});\r\n\r\n\t\t// sort the list\r\n\t\tlist = list.sort((a, b) => b.count - a.count);\r\n\t\treturn list;\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<br />\r\n\t\t\t\t<h1 style={{ textAlign: 'center' }}>\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t\t<b>Covid Bangladesh</b>\r\n\t\t\t\t\t</span>{' '}\r\n\t\t\t\t\t- Statistics\r\n\t\t\t\t</h1>\r\n\t\t\t\t<h3 style={{ textAlign: 'center' }}>\r\n\t\t\t\t\tInfected: <b>{this.state.totalInfected}</b>&nbsp; Death:{' '}\r\n\t\t\t\t\t<b>{this.state.totalDeath}</b>\r\n\t\t\t\t</h3>\r\n\t\t\t\t<h3 style={{ textAlign: 'center' }}>\r\n\t\t\t\t\tRecovered: <b>{this.state.totalRecovered}</b>\r\n\t\t\t\t</h3>\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\r\n\t\t\t\t<AdminCardSection1\r\n\t\t\t\t\tdistrictData={this.state.districtData}\r\n\t\t\t\t\tdivisionalCount={this.state.divisionalCount}\r\n\t\t\t\t/>\r\n\t\t\t\t<hr />\r\n\t\t\t\t<ChartSection1 districtData={this.state.districtData} />\r\n\t\t\t\t<TableSection districtData={this.state.districtData} />\r\n\t\t\t\t<ChartSection2\r\n\t\t\t\t\tdistrictData={this.state.districtData}\r\n\t\t\t\t\tdivisionalCount={this.state.divisionalCount}\r\n\t\t\t\t/>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport { MDBFooter, MDBBtn, MDBIcon } from 'mdbreact';\r\n\r\nconst Footer = () => {\r\n\treturn (\r\n\t\t<MDBFooter\r\n\t\t\tstyle={{ margin: '0 auto' }}\r\n\t\t\tcolor='cyan'\r\n\t\t\tclassName='text-center font-small darken-3'\r\n\t\t>\r\n\t\t\t<div className='pt-1'>\r\n\t\t\t\t<MDBBtn\r\n\t\t\t\t\toutline\r\n\t\t\t\t\tcolor='white'\r\n\t\t\t\t\trel='noopener noreferrer'\r\n\t\t\t\t\ttag='a'\r\n\t\t\t\t\thref='https://github.com/Aflan-63/covid-bangladesh-responsive'\r\n\t\t\t\t\ttarget='_blank'\r\n\t\t\t\t>\r\n\t\t\t\t\tSource Code\r\n\t\t\t\t</MDBBtn>\r\n\t\t\t\t<hr className='my4' />\r\n\t\t\t</div>\r\n\t\t\t<div\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\talignItems: 'center',\r\n\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\tflexDirection: 'column',\r\n\t\t\t\t\t\tmarginRight: '8%',\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\thref='https://www.linkedin.com/in/ifazahmed'\r\n\t\t\t\t\t\t\trel='noopener noreferrer'\r\n\t\t\t\t\t\t\ttarget='_blank'\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<MDBIcon fab icon='linkedin' className='mr-3' />\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\thref='https://github.com/Aflan-63'\r\n\t\t\t\t\t\t\trel='noopener noreferrer'\r\n\t\t\t\t\t\t\ttarget='_blank'\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<MDBIcon fab icon='github' />\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{ fontSize: '1.1em' }} className='pb-3'>\r\n\t\t\t\t\t\tAflan\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\tflexDirection: 'column',\r\n\t\t\t\t\t\tmarginRight: '20px',\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\thref='https://www.linkedin.com/in/ahmed-sadman'\r\n\t\t\t\t\t\t\trel='noopener noreferrer'\r\n\t\t\t\t\t\t\ttarget='_blank'\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<MDBIcon fab icon='linkedin' className='mr-3' />\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\thref='https://github.com/ahmedsadman'\r\n\t\t\t\t\t\t\trel='noopener noreferrer'\r\n\t\t\t\t\t\t\ttarget='_blank'\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<MDBIcon fab icon='github' />\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{ fontSize: '1.1em' }} className='pb-3'>\r\n\t\t\t\t\t\tSamyo\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<p className='footer-copyright py-3 text-center'>\r\n\t\t\t\t<span\r\n\t\t\t\t\tclassName='text-center'\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tcolor: 'rgba(255, 255, 255, 0.8)',\r\n\t\t\t\t\t\tmargin: 0,\r\n\t\t\t\t\t\tpadding: 0,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\tAll data provided by the public API{' '}\r\n\t\t\t\t\t<a\r\n\t\t\t\t\t\thref='https://github.com/ahmedsadman/covid19-bd'\r\n\t\t\t\t\t\ttarget='_blank'\r\n\t\t\t\t\t\trel='noopener noreferrer'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tcovid19-bd\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</span>\r\n\t\t\t</p>\r\n\t\t</MDBFooter>\r\n\t);\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nconst AlertBox = (props) => {\r\n\tif (props.show) {\r\n\t\treturn <div style={styles.container}>{props.children}</div>;\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nconst styles = {\r\n\tcontainer: {\r\n\t\tzIndex: 100,\r\n\t\tbottom: 0,\r\n\t\tleft: 0,\r\n\t\tright: 0,\r\n\t\tposition: 'fixed',\r\n\t\theight: 'auto',\r\n\t\tpadding: '0.5% 2%',\r\n\t\tcolor: 'white',\r\n\t\ttextAlign: 'center',\r\n\t\tbackgroundColor: 'rgba(7, 47, 95, 0.9)',\r\n\t\tboxShadow: '2px 2px 3px gray',\r\n\t\tfontSize: '90%',\r\n\t},\r\n};\r\n\r\nexport default AlertBox;\r\n","import React, { Component } from 'react';\r\nimport './index.css';\r\nimport DashboardPage from './components/pages/DashboardPage';\r\nimport Footer from './components/Footer';\r\nimport AlertBox from './components/AlertBox';\r\n\r\nclass App extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tshowAlertBox: true,\r\n\t\t};\r\n\t\tthis.timer = null;\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.timer = setTimeout(this.hideAlert, 6000);\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tif (this.timer) clearTimeout(this.timer);\r\n\t}\r\n\r\n\thideAlert = () => {\r\n\t\tthis.setState({ showAlertBox: false });\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='flexible-content'>\r\n\t\t\t\t<DashboardPage></DashboardPage>\r\n\t\t\t\t<AlertBox show={this.state.showAlertBox}>\r\n\t\t\t\t\tDistrict-wise data is generally delayed. The count changes\r\n\t\t\t\t\tthat are shown are since last 24 hours\r\n\t\t\t\t</AlertBox>\r\n\t\t\t\t{/* <iframe src=\"demo_iframe.htm\" name=\"iframe_a\"></iframe> */}\r\n\t\t\t\t<Footer></Footer>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}